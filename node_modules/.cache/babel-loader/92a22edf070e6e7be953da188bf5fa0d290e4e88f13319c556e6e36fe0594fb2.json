{"ast":null,"code":"/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport { patternInScope } from '../util/pattern-in-scope.js';\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1;\n  while (++index < state.unsafe.length) {\n    // If we canâ€™t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (state.unsafe[index].character === '\\n' && patternInScope(state.stack, state.unsafe[index])) {\n      return /[ \\t]/.test(info.before) ? '' : ' ';\n    }\n  }\n  return '\\\\\\n';\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}